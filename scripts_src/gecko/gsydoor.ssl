#define SCRIPT_REALNAME "gsydoor"

#include "../headers/geckpwpl.h"
#define Lock_Bonus                      (-20)
#define LOCKED_STATUS                   STATE_ACTIVE
#define DOOR_STATUS                     STATE_NON_DESTROY
#define LOCK_STATUS                     STATE_ELECTRIC_LOCK

#define REACTOR_KEY                     PID_YELLOW_PASS_KEY
#define custom_use_obj_on_p_proc        1
#define call_anger call anger;
procedure anger;

#include "../template/gdoor.ssl"

procedure timed_event_p_proc begin
    set_map_var(MVAR_Lockpick_Attempt,0);
end

procedure anger begin
   set_map_var(MVAR_Lockpick_Attempt, 1); //if guard is watching...stop the dude
   add_timer_event(self_obj,game_ticks(3),0);
end

procedure key_unlock_door begin
   set_local_var(LVAR_Locked, STATE_INACTIVE);
   obj_unlock(self_obj);
   script_overrides;
   display_msg(mstr(300));
end

procedure key_lock_door begin
    script_overrides;
    if (obj_is_open(self_obj)) then
        display_msg(mstr(302));
    else begin
        set_local_var(LVAR_Locked, STATE_ACTIVE);
        obj_lock(self_obj);
        display_msg(mstr(301));
    end
end

procedure use_obj_on_p_proc begin
   variable Tool;

   Tool:=obj_pid(obj_being_used_with);

   if (LOCK_STATUS == STATE_STANDARD_LOCK) then begin
       if (Tool == PID_LOCKPICKS) then begin
           script_overrides; //added by killap
           if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
               call Lockpick_Lock;
           end
           else begin
               call Set_Lockpick_Lock;
           end
       end
       else if (Tool == PID_EXP_LOCKPICK_SET) then begin
           script_overrides; //added by killap
           if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
               call Super_Lockpick_Lock;
           end
           else begin
               call Super_Set_Lockpick_Lock;
           end
       end
   end

   else if (LOCK_STATUS == STATE_ELECTRIC_LOCK) then begin
       if (Tool == REACTOR_KEY) then begin
          script_overrides; //added by killap
          if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
             call key_unlock_door;
          end
          else begin
             call key_lock_door;
          end
       end
       else if (Tool == PID_ELECTRONIC_LOCKPICKS) then begin
           script_overrides; //added by killap
           if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
               call Lockpick_Lock;
           end
           else begin
               call Set_Lockpick_Lock;
           end
       end
       else if (Tool == PID_ELEC_LOCKPICK_MKII) then begin
           script_overrides; //added by killap
           if (local_var(LVAR_Locked) == STATE_ACTIVE) then begin
               call Super_Lockpick_Lock;
           end
           else begin
               call Super_Set_Lockpick_Lock;
           end
       end
   end

   else if (Tool == PID_CROWBAR) then begin
       script_overrides; //added by killap
       call Pry_Door;
   end

   else if ((Tool == PID_DYNAMITE) or (Tool == PID_PLASTIC_EXPLOSIVES)) then begin
       script_overrides; //added by killap
       call Set_Trap;
   end

end
