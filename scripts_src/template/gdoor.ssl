/***************************************************************************
   This procedure is used should the player try to pry the door open using a
   crowbar or some similar instrument.
***************************************************************************/

#ifndef custom_Pry_Door
procedure Pry_Door begin
   variable Stat_Roll;

   Stat_Roll:=do_check(source_obj,STAT_st,Crowbar_Bonus);

   if (is_success(Stat_Roll)) then begin
       set_local_var(LVAR_Locked, STATE_INACTIVE);
       obj_unlock(self_obj);

       if (source_obj == dude_obj) then begin
           display_msg(mstr(176));
       end

       else begin
           display_msg(mstr(181));
       end
   end

   else if (is_critical(Stat_Roll)) then begin
       critter_dmg(source_obj,Crowbar_Strain,(DMG_normal_dam BWOR DMG_BYPASS_ARMOR));

       if (source_obj == dude_obj) then begin
           if (Crowbar_Strain == 1) then begin
               display_msg(mstr(177));
           end
           else begin
               display_msg(mstr(178)+Crowbar_Strain+mstr(179));
           end
       end

       else begin
           if (is_male(source_obj)) then begin
               if (Crowbar_Strain == 1) then begin
                   display_msg(mstr(182));
               end
               else begin
                   display_msg(mstr(183)+Crowbar_Strain+mstr(184));
               end
           end
 
           else begin
               if (Crowbar_Strain == 1) then begin
                   display_msg(mstr(186));
               end
               else begin
                   display_msg(mstr(187)+Crowbar_Strain+mstr(188));
               end
           end
       end
   end

   else begin
       if (source_obj == dude_obj) then begin
           display_msg(mstr(180));
       end

       else begin
           display_msg(mstr(185));
       end
   end
end
#endif

/***************************************************************************
   This procedure will check against the roll_vs_lockpick to see if the
   source_object will unlock the door and display the appropriate messages
***************************************************************************/
#ifndef custom_Lockpick_Door
procedure Lockpick_Door begin
   if (is_success(Locks_Roll)) then begin
       set_local_var(LVAR_Locked, STATE_INACTIVE);              // Door is unlocked
       obj_unlock(self_obj);                                    // engine unlock door

       if (source_obj == dude_obj) then begin
           display_msg(mstr(170));
       end

       else begin
           display_msg(obj_name(source_obj)+mstr(173));
       end

       if (local_var(LVAR_Gave_Locks_XP) == 0) then begin
           set_local_var(LVAR_Gave_Locks_XP,1);
           give_xp(Lockpick_Exp);
       end
   end

   else if (is_critical(Locks_Roll)) then begin
       jam_lock(self_obj);

       if (source_obj == dude_obj) then begin
           display_msg(mstr(171));
       end

       else begin
           display_msg(obj_name(source_obj)+mstr(174));
       end
   end

   else begin
       if (source_obj == dude_obj) then begin
           display_msg(mstr(172));
       end

       else begin
           display_msg(obj_name(source_obj)+mstr(175));
       end
   end
end
#endif
